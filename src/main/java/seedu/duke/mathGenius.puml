@startuml


    class ProblemGenerator {
        -DEFAULT_NUMBER: String = "10"
        -DEFAULT_MAX_DIGITS: String = "2"
        -DEFAULT_OPERATORS: String = "+-*/"
        -PROBLEM_FORM: String
        -in: Scanner
        +typeChoose(): Test
        -generate(parameter: HashMap<String, String>): Test
        +parseCommand(command: String): HashMap<String, String>
        -defaultOptions(command: String, options: HashMap<String, String>): void
    }

    class Test {
            -operators: String
            -maxDigits: int
            -number: int
            -problemList: ArrayList<Problem>
            +Test(operators: String, maxDigits: int, number: int)
            +addToTest(p: Problem): void
            +getNumber(): int
            +getProblem(): ArrayList<Problem>
        }

    class Problem {
        -description: String
        -answer: double
        +Problem(description: String, answer: double)
        +unsolved(): String
    }

    class Ui {
        +missingMessage(option: String): void
    }

    class Checker {
        -userAnswer: Double[]
        -test: Test
        -isCorrect: Boolean[]
        -correctNumber: int
        -accuracy: double
        -time: long
        +checkCorrectness(problem: Problem, answer: double): Boolean
        +Checker(test: Test)
        +getUserAnswer(): void
        +checkAnswer(): Boolean[]
        +getCorrectNumber(): int
        +getAccuracy(): double
        +getTime(): long
    }
    class Parser {
        +parse(command: String, ui: Ui): void
    }
    class Duke {
        -name: String
        -ui: Ui
        +run(): void
        +main(args: String[]): void
    }


    class Storage {
        -filePath: String
        -formatter: DateTimeFormatter
        -records: List<Record>
        +addRecord(record: Record): void
        +clearRecords(): void
        +processLine(line: String): void
        +readFile(): void
        +writeFile(): void
    }

    class Ui {
        -name: String
        -scanner: Scanner
        -PROBLEM_FORM: String
        -INPUT_INSTRUCTION: String
        -GEN_COMMAND: String
        -HELP_COMMAND: String
        +Ui(name: String)
        +greet(): void
        +readCommand(): String
        +showLine(): void
        +help(helpType: String): void
        +invalidCommand(): void
        +exit(): void
        +missingMessage(parameters: String): void
    }
    class Record {
        -formatter: DateTimeFormatter
        -dateTime: LocalDateTime
        -speed: double
        -accuracy: double
        +writeLine(): String
        +Record(dateTime: LocalDateTime, speed: double, accuracy: double)
        +getSpeed(): double
        +setSpeed(speed: double): void
        +getAccuracy(): double
        +setAccuracy(accuracy: double): void
        +getDateTime(): LocalDateTime
        +setDateTime(dateTime: LocalDateTime): void
    }


Test --> Problem: contains
ProblemGenerator --> Test: create

ProblemGenerator --> Ui: displayMessage
Checker --> Test :check
Checker --> Problem
Parser --> Ui
Parser --> ProblemGenerator
Storage --> Record
Parser --> Record
Parser --> Checker
Duke --> Ui
Duke --> Parser

Duke --> Storage:readfrom
@enduml
